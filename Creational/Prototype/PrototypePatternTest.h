#pragma once
#include "ConcretePrototypeClasses.h"
/*Шаблон Prototype специально ориентирован на эффективное 
создание объектов путем копирования существующего объекта,
который мы называем Прототипом / Prototype.*/

/*Как работает шаблон Prototype:
Интерфейс прототипа: Он определяет общий интерфейс или абстрактный класс, 
который должны реализовывать все конкретные классы-прототипы. 
Этот интерфейс обычно включает метод для клонирования объекта.

Конкретные прототипы: Это реальные объекты, реализующие интерфейс прототипа.
Каждый конкретный класс прототипа предоставляет реализацию метода клонирования,
который создает копию объекта.

Клиент: Клиентский код отвечает за создание новых объектов путем клонирования существующих прототипов.
Вместо непосредственного создания объектов с использованием ключевого слова new 
клиент запрашивает прототип для клонирования самого себя.*/

namespace PrototypePattern {
	static void PrototypePatternTest()
	{
		//мы начинаем с создания экземпляров прототипов круга и прямоугольника.  --- или они инжектятся из внешнего файла.
		Circle circlePrototype(5.0);
		Rectangle rectanglePrototype(4.0, 6.0);

		//Создание новых объектов по прототипам
		Shape* shape1 = circlePrototype.clone();
		Shape* shape2 = rectanglePrototype.clone();

		shape1->draw(); // Output: Drawing a circle with radius 5
		shape2->draw(); // Output: Drawing a rectangle with width 4 and height 6
	}
}